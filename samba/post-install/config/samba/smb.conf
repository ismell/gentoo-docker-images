# This is the main Samba configuration file. You should read the
# smb.conf(5) manual page in order to understand the options listed
# here. Samba has a huge number of configurable options (perhaps too
# many!) most of which are not shown in this example
#
# For a step to step guide on installing, configuring and using samba, 
# read the Samba-HOWTO-Collection. This may be obtained from:
#  http://www.samba.org/samba/docs/Samba-HOWTO-Collection.pdf
#
# Many working examples of smb.conf files can be found in the 
# Samba-Guide which is generated daily and can be downloaded from: 
#  http://www.samba.org/samba/docs/Samba-Guide.pdf
#
# Any line which starts with a ; (semi-colon) or a # (hash) 
# is a comment and is ignored. In this example we will use a #
# for commentry and a ; for parts of the config file that you
# may wish to enable
#
# NOTE: Whenever you modify this file you should run the command "testparm"
# to check that you have not made any basic syntactic errors. 
#
#======================= Global Settings =====================================
[global]
   workgroup = MYGROUP
   server string = Samba Server
   server role = standalone server

   # NetBIOS is deprecated and no longer available by default in Windows 10.
   disable netbios = yes
   smb ports = 445

# This option is important for security. It allows you to restrict
# connections to machines which are on your local network. The
# following example restricts access to two C class networks and
# the "loopback" interface. For more examples of the syntax see
# the smb.conf man page
;   hosts allow = 192.168.1. 192.168.2. 127.

# We want unknown users to map to the guest user. This allows the OS X browser
# to list the shares before asking for authentication.
  map to guest = Bad User

  log level = 0

  passdb backend = tdbsam

# DNS Proxy - tells Samba whether or not to try to resolve NetBIOS names
# via DNS nslookups. The default is NO.
   dns proxy = no 

# These scripts are used on a domain controller or stand-alone 
# machine to add or delete corresponding unix accounts
  add user script = /usr/local/sbin/useradd %u
  add group script = /usr/local/sbin/groupadd %g
  add machine script = /usr/local/sbin/adduser -n -g machines -c Machine -d /dev/null -s /bin/false %u
  delete user script = /usr/local/sbin/userdel %u
  delete user from group script = /usr/local/sbin/deluser %u %g
  delete group script = /usr/local/sbin/groupdel %g

# Printers are not supported
  load printers = no
  printcap name = /dev/null

# Configure OS X
  # The linux VFS and SMB protocol limit xattrs to 64 KiB. Additionally each
  # file system has their own limits. See `man xattr`. XFS, ReiserFS and ZFS
  # do not have limits on number of xattrs or their size. Ext4 and Btrfs have
  # lower limits.
  vfs objects = catia fruit streams_xattr
  fruit:aapl = yes
  # Since the linux VFS has a 64 KiB limit, we need to leave this set to file.
  fruit:resource = file
  # Valid values: Xserve, Tower, TimeCapsule
  fruit:model = Xserve
  ; fruit:metadata = netatalk
  ; fruit:locking = netatalk
  ; fruit:encoding = native
  # Most Linux systems don't use ACLs.
  fruit:nfs_aces = no

#============================ Share Definitions ==============================
[homes]
   comment = Home Directories
   browseable = no
   writable = yes

[config]
   comment = Configuration Files
   path = /config
   valid users = root
   public = no
   writable = yes
# Uncomment this line once your server is configured to hide the share.
;   browseable = no

[TimeMachineBackup]
   fruit:time machine = yes
   preexec close = yes
   preexec = sh -c 'ensure-xattr "%H" && mkdir -p --mode 750 "%H/TimeMachineBackup"'
   path = %H/TimeMachineBackup
   writable = yes
   guest ok = no
   browseable = no

# This one is useful for people to share files
;[tmp]
;   comment = Temporary file space
;   path = /tmp
;   read only = no
;   public = yes

# A publicly accessible directory, but read only, except for people in
# the "staff" group
;[public]
;   comment = Public Stuff
;   path = /home/samba
;   public = yes
;   writable = no
;   printable = no
;   write list = @staff

# A private directory, usable only by fred. Note that fred requires write
# access to the directory.
;[fredsdir]
;   comment = Fred's Service
;   path = /usr/somewhere/private
;   valid users = fred
;   public = no
;   writable = yes
;   printable = no

# a service which has a different directory for each machine that connects
# this allows you to tailor configurations to incoming machines. You could
# also use the %U option to tailor it by user name.
# The %m gets replaced with the machine name that is connecting.
;[pchome]
;  comment = PC Directories
;  path = /usr/pc/%m
;  public = no
;  writable = yes

# A publicly accessible directory, read/write to all users. Note that all files
# created in the directory by users will be owned by the default user, so
# any user with access can delete any other user's files. Obviously this
# directory must be writable by the default user. Another user could of course
# be specified, in which case all files would be owned by that user instead.
;[public]
;   path = /usr/somewhere/else/public
;   public = yes
;   only guest = yes
;   writable = yes
;   printable = no

# The following two entries demonstrate how to share a directory so that two
# users can place files there that will be owned by the specific users. In this
# setup, the directory should be writable by both users and should have the
# sticky bit set on it to prevent abuse. Obviously this could be extended to
# as many users as required.
;[myshare]
;   comment = Mary's and Fred's stuff
;   path = /usr/somewhere/shared
;   valid users = mary fred
;   public = no
;   writable = yes
;   printable = no
;   create mask = 0765


